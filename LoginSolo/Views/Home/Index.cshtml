@model List<City>

@{
    ViewData["Title"] = "Home Page";
}

<head>
    <style>
        .scroll-container {
            overflow-x: scroll;
            white-space: nowrap;
        }

        ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
            display: flex;
        }

        .scroll-item {
            flex: 0 0 auto;
            margin-right: 20px; /* Adjust as needed */
        }

        input[type="text"],
        input[type="password"],
        input[type="date"],
        input[type="datetime"],
        input[type="email"],
        input[type="number"],
        input[type="search"],
        input[type="tel"],
        input[type="time"],
        input[type="url"],
        textarea,
        select {
            background: rgba(255,255,255,0.1);
            border: none;
            font-size: 16px;
            height: auto;
            margin: 0;
            outline: 0;
            padding: 15px;
            width: 100%;
            background-color: rgba(255,255,255,0.3);
            border-radius: 10px;
            color: white;
            margin-bottom: 30px;
        }

        button[type="button"] {
            background-color: rgba(0,0,0,0.5);
            color: rgba(255,255,255,0.8);
            border: none;
            border-radius: 10px;
        }
    </style>
</head>
<body>
<div class="text-center">
    
    @if (ViewBag.CurrentUser == null)
    {
        <h1 class="display-4">Welcome</h1>
        <div>
            <p>Please login to search and add cities to the view.</p>
        </div>
    }
    else
    {
        <!-- Add a form with a text field and a button -->
        <form id="addCityForm" style="padding-bottom: 25px;">
            <div style="height:50px; width:1000px; display: grid; grid-template-columns: repeat(7, 1fr); grid-template-rows: 1fr; grid-column-gap: 0px; grid-row-gap: 0px;">
                <div style="grid-area: 1 / 1 / 2 / 6;">
                    <input type="text" id="cityName" name="cityName" placeholder="Search for places" style="height:50px; width:700px;" required>
                </div>
                <div style="grid-area: 1 / 6 / 2 / 7; ">
                    <button type="button" onclick="addCity()" style="height:50px; width:130px;">Add City</button>
                </div>
                <div style="grid-area: 1 / 7 / 2 / 8; ">
                    <button type="button" onclick="clearCities()" style="height:50px; width:130px;">Clear Cities</button>
                </div>
            </div>
        </form>

        <div class="scroll-container" sytle="padding-top: 25px;">
            <ul>
                @foreach (City city in Model)
                {
                    <li class="scroll-item">
                        @Html.PartialAsync("_WeatherWidget", @city).Result
                    </li>
                }
            </ul>
        </div>
    }

</div>
</body>


@section scripts {
    <script>
        function addCity() {
            var cityName = document.getElementById("cityName").value;

            // Make an AJAX request to the AddCityToUser action
            $.ajax({
                url: '@Url.Action("AddCityToUser", "Home")',
                type: 'POST',
                data: { cityName: cityName },
                success: function (result) {
                    if (result === 0) {
                        alert('City added successfully.');
                        reloadPage();
                    } else {
                        alert('Error adding city.');
                    }
                },
                error: function () {
                    alert('Error adding city.');
                }
            });
        }

        function clearCities() {
            // Make an AJAX request to the ClearUserCities action
            $.ajax({
                url: '@Url.Action("ClearUserCities", "Home")',
                type: 'POST',
                success: function (result) {
                    if (result === 0) {
                        alert('Cities cleared successfully.');
                        reloadPage();
                    } else {
                        alert('Error clearing cities.');
                    }
                },
                error: function () {
                    alert('Error clearing cities.');
                }
            });
        }

        function reloadPage() {
            // Reload the page
            location.reload();
        }
    </script>
}
